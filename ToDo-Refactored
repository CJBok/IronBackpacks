Place to hold notes for 1.11+ changes

Go through everything and add Preconditions checks where needed

JSON/Config to add new tiers of backpacks via user?

addon mods would use a new registry event to simply register their own, simple as that

look at OpenBlocks for save/restore to file

sizes of 1.10:
    basic - 9x2 = 18
    ironS - 9x4 = 36
    ironU - 9x3 = 27
    goldS - 9x6 = 54
    goldU - 9x5 = 45
    diamondS - 11x7 = 77
    diamondU - 9x7 = 63

    Up
    --
    27
    45
    63
    (+18 each, 2 rows of 9)

    St
    --
    36
    54
    77
    (+18, +23)



my own event: onBackpackContentsChanged

//On Inv Changed via paulfulham on mmd (beware: may call onUpdate, so every tick, need to look into that)
private void macgyverTheInventoryChangedHook() {
    InventoryChangeTrigger delegate = CriteriaTriggers.INVENTORY_CHANGED;
    InventoryChangeTrigger forwarding = new InventoryChangeTrigger() {
        @Override
        public ResourceLocation getId() {
            return delegate.getId();
        }

        @Override
        public void addListener(PlayerAdvancements advancements, ICriterionTrigger.Listener<InventoryChangeTrigger.Instance> listener) {
            delegate.addListener(advancements, listener);
        }

        @Override
        public void removeListener(PlayerAdvancements advancements, ICriterionTrigger.Listener<InventoryChangeTrigger.Instance> listener) {
            delegate.removeListener(advancements, listener);
        }

        @Override
        public void removeAllListeners(PlayerAdvancements advancements) {
            delegate.removeAllListeners(advancements);
        }

        @Override
        public InventoryChangeTrigger.Instance deserializeInstance(JsonObject json, JsonDeserializationContext context) {
            return delegate.deserializeInstance(json, context);
        }

        @Override
        public void trigger(EntityPlayerMP player, InventoryPlayer inventory) {
            delegate.trigger(player, inventory);
            System.out.println("Hello, World!");
        }
    };
    Field invChangedField = ReflectionHelper.findField(CriteriaTriggers.class, "field_192125_e", "INVENTORY_CHANGED");
    try {
        EnumHelper.setFailsafeFieldValue(invChangedField, null, forwarding);
    } catch (Exception e) {
        throw new RuntimeException(e);
    }
}
Run that method during init
Make the trigger method call the code you need
The beauty of this code is that any number of mods could do it like this and they would all work
Well you'd want to not modify the inventory during trigger
schedule a task if that needs to be done